Super Metroid has contextual clues to guide the player
Need to change the structure of enemy data
-Attack stat on enemies
-Multiple spells to be used
-Want the player to mental math and have a good idea what damage will do
-Want spirit attacks to be just as good as other chars
-Want characters to be distinct
-Attack Impair reduced attack by xx
-Alert 3/8th -> Alert worth 2/255

Java + Scene Builder fxml + Controller class to connect
Kotlin .kt files
Serializing data Java library

(Hit determination)
Hit1 = AlertDefM + EvadeDefM + AlertAtkM + AccurAtkM
Hit2 = AlertDefM + EvadeDefM + TargetM + UnkM

Hit3 = Hit1 - Hit2 + F5 (cap at FF)
Crit% = CritM

Roll a p-random number RAND = 0...FF
Hits  if RAND < Hit3
Crits if also < Crit%


AlertDefM:	(ALT /8 + 1) * 3
EvadeDefM:	EvadeMult * $80/$100
EvadeMult:	Target evade: (No buff: 80 / Buff: FF / Debuffed: 00)
TargetM:	Target:  party 1A / enemy 0
UnkM:		0 usually
AlertAtkM:	(ALT /8 + 1) * 3
AccurAtkM:	AccurMult * $80/$100
AccurMult:	Attacker accur: (No buff: 80 / Buff: FF / Debuffed: 00)
CritM:		(Weapon power / Unarmed power / Monster weapon power / 0)




($C676: Target Alertness mod) (ALT /8 + 1) * 3 
+ ($C585: Target Evasion buff) ($80 | $FF | $00) * $80 / $100
→ [$20]

[$20] → [$00]

[$00]
($C05E: Enemy to-hit bonus) +$1A if attacking an enemy
+ ($C07C: Dead actor mod) So far +0 to [$00].
   Possible other values $1A, $33, $4C.


($C67C: Attacking Alertness mod (ALT/8 + 1) * 3 
+ ($C49B: Attacking Accuracy buff ($80 | $FF | $00) * $80 / $100
→ [$20]

($C08F: Combine + Acc check) [$20] - [$00] + $F5, if >$FF set to $FF
→ [$00]


($C6DC: Critloads of branching) x=0
  Returns [$02] based on X and Y
 Loads Rooks' level 
 Loads Attacker weapon ID
 Loads Weapon "acc" stat
 Loads Weapon power
 Loads $85D4A5,x
 Loads $85E24E,x
 Loads $85D285,x

($89F1: Call RNG on A, picks 0...A-1)

($C8C2: A / X) (X result, A remainder)

($C0B9: Check for hit/crit)
(If crit, INC $1125)




(Damage calculation) (Need to watch [$08])


($C6DC: Shitloads of branching) x=1 y=0: Eq?2
Subtract $CD - Attacker's weapon Eq?2
→ PHA


($C658: Attacker's strength) (STR*$BF)/$100 + $40         (floor(Str*74.6%) + 64 dec)
+ ($C4E2: Attack buff)  ($80 | $FF | $00) * $33 / $100    (+25 | 50 | 00 dec)
+ ($CD-Attacker Eq?2)                                     (+205 dec - Attacker Eq2)


($C6DC: Shitloads of branching) x=2: WPwr


($C519: Multiplication) WPwr * [$08] /$100  ORA [$08]
 It's complicated?
  → [$00]

($C781: Armor defense) (ADEF* $66)/$100 → $08
+ ($C544: Accessory defense) (ACDEF* $33)/$100
+ ($C66A: Endurance) ((END * $DF)/$100+$20) * $33/$100
→ [$08]

[$02]
+ ($C0E3: Accuracy again??) (($80 | $FF | $00) *$33)/$100

($C0FE/C8A1: Combining)  ($FF - [$02]) * [$00]  ??
→ [$00]

(?????)

($C6DC: Shitloads of branching) x=3
($C31E: Attacker element check)
($C3CB: Target element check)

($C781: Armor defense again)



[$20] final damage
[$00]
[$02]
[$08]
